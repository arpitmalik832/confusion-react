[{"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\reportWebVitals.js":"1","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\App.js":"2","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\index.js":"3","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\MenuComponent.js":"4","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\DishDetailComponent.js":"5","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\MainComponent.js":"6","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\FooterComponent.js":"7","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\HomeComponent.js":"8","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\HeaderComponent.js":"9","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\ContactComponent.js":"10","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\AboutComponent.js":"11","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\configureStore.js":"12","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\leaders.js":"13","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\comments.js":"14","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\ActionCreators.js":"15","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\ActionTypes.js":"16","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\forms.js":"17","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\LoadingComponent.js":"18","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\shared\\leaders.js":"19","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\dishes.js":"20"},{"size":362,"mtime":1607500527372,"results":"21","hashOfConfig":"22"},{"size":534,"mtime":1608296040787,"results":"23","hashOfConfig":"22"},{"size":643,"mtime":1607932707246,"results":"24","hashOfConfig":"22"},{"size":2003,"mtime":1608726009497,"results":"25","hashOfConfig":"22"},{"size":7304,"mtime":1608724977189,"results":"26","hashOfConfig":"22"},{"size":3424,"mtime":1608923455368,"results":"27","hashOfConfig":"22"},{"size":2595,"mtime":1607952996247,"results":"28","hashOfConfig":"22"},{"size":1573,"mtime":1608923781894,"results":"29","hashOfConfig":"22"},{"size":5475,"mtime":1608571793710,"results":"30","hashOfConfig":"22"},{"size":8275,"mtime":1608727414143,"results":"31","hashOfConfig":"22"},{"size":4303,"mtime":1608119096999,"results":"32","hashOfConfig":"22"},{"size":796,"mtime":1608726988968,"results":"33","hashOfConfig":"22"},{"size":176,"mtime":1608558206313,"results":"34","hashOfConfig":"22"},{"size":692,"mtime":1608923167555,"results":"35","hashOfConfig":"22"},{"size":3063,"mtime":1608925592553,"results":"36","hashOfConfig":"22"},{"size":178,"mtime":1608730234765,"results":"37","hashOfConfig":"22"},{"size":161,"mtime":1608726876059,"results":"38","hashOfConfig":"22"},{"size":246,"mtime":1608728381352,"results":"39","hashOfConfig":"22"},{"size":2345,"mtime":1608925271416,"results":"40","hashOfConfig":"22"},{"size":608,"mtime":1608925320834,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1hjovdz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\reportWebVitals.js",[],["89","90"],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\App.js",[],["91","92"],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\index.js",[],["93","94"],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\MenuComponent.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\DishDetailComponent.js",["95","96","97"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal()\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal} >\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\" validators={{ minLength: minLength(3), maxLength: maxLength(15) }} />\r\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 characters or less' }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderComment ({ comment }) {\r\n    return (\r\n        <div c>\r\n            <p>{comment.comment}</p>\r\n            <p>\r\n                -- {comment.author}, {new Intl.DateTimeFormat(\r\n                    'en-US', \r\n                    {\r\n                        year: 'numeric',\r\n                        month: 'short', \r\n                        day: '2-digit'\r\n                    }\r\n                ).format(new Date(Date.parse(comment.date)))}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments ({ comments, addComment, dishId }) {\r\n    const formattedComments = comments.map((comment) => {\r\n        return (\r\n            <RenderComment comment={comment}/>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments</h4>\r\n            {formattedComments}\r\n            <CommentForm dishId={dishId} addComment={addComment} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg  width=\"100%\" src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DishDetail = (props) => { \r\n    if(props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.err) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.err}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.dish != null) {\r\n        return (  \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/menu'>Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            {props.dish.name}\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">    \r\n                    <RenderDish dish={props.dish}/>\r\n                    <RenderComments comments={props.comments} addComment={props.addComment} dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail;",["98","99"],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\MainComponent.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\FooterComponent.js",[],["100","101"],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\HomeComponent.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\HeaderComponent.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\ContactComponent.js",["102","103","104","105","106","107","108","109"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        alert(\"Current State is: \" + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to='/home'>Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            Contact us\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/contactus\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send Us your feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\n                                        <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 characters or less' }} />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\n                                        <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 characters or less' }} />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15), isNumber }} />\n                                        <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 numbers', maxLength: 'Must be 15 numbers or less', isNumber: 'Must be a number' }} />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"email\" md={2}>Email</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\" validators={{ required, validEmail }} />\n                                        <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{ required: 'Required',  validEmail: 'Invalid Email Address' }} />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{size: 6, offset: 2}}>\n                                        <div className=\"form-check\">\n                                            <Label check>\n                                                <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '} <strong>May we contact you</strong>\n                                            </Label>\n                                        </div>\n                                    </Col>\n                                    <Col md={{size: 3, offset: 1}}>\n                                        <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\" >\n                                            <option>Tel.</option>\n                                            <option>Email</option>\n                                        </Control.select> \n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                    <Col md={10}>\n                                        <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{size:10, offset:2}}>\n                                        <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\n                                    </Col>\n                                </Row>\n                        </Form>\n                    </div>\n                </div> \n            </div>\n        );\n    }\n}\n\nexport default Contact;","D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\AboutComponent.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\configureStore.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\leaders.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\comments.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\ActionCreators.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\ActionTypes.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\forms.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\components\\LoadingComponent.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\shared\\leaders.js",[],"D:\\Coursera\\MultiplatformApp\\Projects\\confusion-react\\src\\redux\\dishes.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"110","replacedBy":"116"},{"ruleId":"112","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":49,"column":37,"nodeType":"120","endLine":49,"endColumn":120},{"ruleId":"118","severity":1,"message":"121","line":65,"column":37,"nodeType":"120","endLine":65,"endColumn":211},{"ruleId":"118","severity":1,"message":"122","line":76,"column":37,"nodeType":"120","endLine":76,"endColumn":136},{"ruleId":"110","replacedBy":"123"},{"ruleId":"112","replacedBy":"124"},{"ruleId":"110","replacedBy":"125"},{"ruleId":"112","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":4,"column":33,"nodeType":"129","messageId":"130","endLine":4,"endColumn":40},{"ruleId":"118","severity":1,"message":"121","line":77,"column":41,"nodeType":"120","endLine":77,"endColumn":235},{"ruleId":"118","severity":1,"message":"121","line":84,"column":41,"nodeType":"120","endLine":84,"endColumn":231},{"ruleId":"118","severity":1,"message":"121","line":91,"column":41,"nodeType":"120","endLine":91,"endColumn":237},{"ruleId":"118","severity":1,"message":"121","line":98,"column":41,"nodeType":"120","endLine":98,"endColumn":179},{"ruleId":"118","severity":1,"message":"131","line":106,"column":49,"nodeType":"120","endLine":106,"endColumn":126},{"ruleId":"118","severity":1,"message":"119","line":111,"column":41,"nodeType":"120","endLine":111,"endColumn":123},{"ruleId":"118","severity":1,"message":"122","line":120,"column":41,"nodeType":"120","endLine":120,"endColumn":141},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],["132"],["133"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["132"],["133"],["132"],["133"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]